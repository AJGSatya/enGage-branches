#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace enGage.DL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="enGage")]
	public partial class enGageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAUPostCode(AUPostCode instance);
    partial void UpdateAUPostCode(AUPostCode instance);
    partial void DeleteAUPostCode(AUPostCode instance);
    partial void InsertClassification(Classification instance);
    partial void UpdateClassification(Classification instance);
    partial void DeleteClassification(Classification instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertBusinessType(BusinessType instance);
    partial void UpdateBusinessType(BusinessType instance);
    partial void DeleteBusinessType(BusinessType instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertIndustry(Industry instance);
    partial void UpdateIndustry(Industry instance);
    partial void DeleteIndustry(Industry instance);
    partial void InsertAssociation(Association instance);
    partial void UpdateAssociation(Association instance);
    partial void DeleteAssociation(Association instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertBranchRegion(BranchRegion instance);
    partial void UpdateBranchRegion(BranchRegion instance);
    partial void DeleteBranchRegion(BranchRegion instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertOpportunity(Opportunity instance);
    partial void UpdateOpportunity(Opportunity instance);
    partial void DeleteOpportunity(Opportunity instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    #endregion
		
		//public enGageDataContext() : 
		//		base(global::enGage.DL.Properties.Settings.Default.enGageConnectionString1, mappingSource)
		//{
		//	OnCreated();
		//}
		
		public enGageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enGageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enGageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enGageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AUPostCode> AUPostCodes
		{
			get
			{
				return this.GetTable<AUPostCode>();
			}
		}
		
		public System.Data.Linq.Table<Classification> Classifications
		{
			get
			{
				return this.GetTable<Classification>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLogs
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<BusinessType> BusinessTypes
		{
			get
			{
				return this.GetTable<BusinessType>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Industry> Industries
		{
			get
			{
				return this.GetTable<Industry>();
			}
		}
		
		public System.Data.Linq.Table<Association> Associations
		{
			get
			{
				return this.GetTable<Association>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<BranchRegion> BranchRegions
		{
			get
			{
				return this.GetTable<BranchRegion>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<_ibais_TeamList> _ibais_TeamLists
		{
			get
			{
				return this.GetTable<_ibais_TeamList>();
			}
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<Opportunity> Opportunities
		{
			get
			{
				return this.GetTable<Opportunity>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListLogs")]
		public ISingleResult<sp_web_ListLogsResult> sp_web_ListLogs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filter", DbType="Int")] System.Nullable<int> filter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filter);
			return ((ISingleResult<sp_web_ListLogsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_IsOpportunityCompleted")]
		public int sp_web_IsOpportunityCompleted([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsCompleted", DbType="Bit")] ref System.Nullable<bool> isCompleted)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID, isCompleted);
			isCompleted = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_GetCurrentOpportunityStatus")]
		public ISingleResult<sp_web_GetCurrentOpportunityStatusResult> sp_web_GetCurrentOpportunityStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID);
			return ((ISingleResult<sp_web_GetCurrentOpportunityStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_GetCurrentFollowUpDate")]
		public int sp_web_GetCurrentFollowUpDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowUpDate", DbType="SmallDateTime")] ref System.Nullable<System.DateTime> followUpDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID, followUpDate);
			followUpDate = ((System.Nullable<System.DateTime>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListClientOpenOpportunities")]
		public ISingleResult<sp_web_ListClientOpenOpportunitiesResult> sp_web_ListClientOpenOpportunities([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientID", DbType="Int")] System.Nullable<int> clientID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID);
			return ((ISingleResult<sp_web_ListClientOpenOpportunitiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListClientClosedOpportunities")]
		public ISingleResult<sp_web_ListClientClosedOpportunitiesResult> sp_web_ListClientClosedOpportunities([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientID", DbType="Int")] System.Nullable<int> clientID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID);
			return ((ISingleResult<sp_web_ListClientClosedOpportunitiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListOpportunityInactiveActivities")]
		public ISingleResult<sp_web_ListOpportunityInactiveActivitiesResult> sp_web_ListOpportunityInactiveActivities([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID);
			return ((ISingleResult<sp_web_ListOpportunityInactiveActivitiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListClientContacts")]
		public ISingleResult<sp_web_ListClientContactsResult> sp_web_ListClientContacts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientID", DbType="Int")] System.Nullable<int> clientID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID);
			return ((ISingleResult<sp_web_ListClientContactsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListNextOpportunityStatuses")]
		public ISingleResult<sp_web_ListNextOpportunityStatusesResult> sp_web_ListNextOpportunityStatuses([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID);
			return ((ISingleResult<sp_web_ListNextOpportunityStatusesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListCurrentOpportunityStatuses")]
		public ISingleResult<sp_web_ListCurrentOpportunityStatusesResult> sp_web_ListCurrentOpportunityStatuses([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID);
			return ((ISingleResult<sp_web_ListCurrentOpportunityStatusesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_FindClientByField")]
		public ISingleResult<sp_web_FindClientByFieldResult> sp_web_FindClientByField([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchCriteria", DbType="VarChar(250)")] string searchCriteria, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientFilter", DbType="VarChar(3)")] string clientFilter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatchFilter", DbType="Char(1)")] System.Nullable<char> matchFilter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FieldName", DbType="VarChar(20)")] string fieldName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxRecords", DbType="Int")] System.Nullable<int> maxRecords, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoOfRecords", DbType="Int")] ref System.Nullable<int> noOfRecords)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchCriteria, clientFilter, matchFilter, fieldName, maxRecords, noOfRecords);
			noOfRecords = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((ISingleResult<sp_web_FindClientByFieldResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListStatusesByOutcomeType")]
		public ISingleResult<sp_web_ListStatusesByOutcomeTypeResult> sp_web_ListStatusesByOutcomeType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutcomeType", DbType="Char(1)")] System.Nullable<char> outcomeType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), outcomeType);
			return ((ISingleResult<sp_web_ListStatusesByOutcomeTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_rpt_DashboardNorthSydney")]
		public ISingleResult<proc_rpt_DashboardNorthSydneyResult> proc_rpt_DashboardNorthSydney([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamLeaderName", DbType="VarChar(80)")] string teamLeaderName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportStart, reportEnd, teamLeaderName);
			return ((ISingleResult<proc_rpt_DashboardNorthSydneyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_FollowUpsSummary")]
		public int sp_web_FollowUpsSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(30)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowUpsCount", DbType="Int")] ref System.Nullable<int> followUpsCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowUpsOverdue", DbType="Int")] ref System.Nullable<int> followUpsOverdue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubmittedCount", DbType="Int")] ref System.Nullable<int> submittedCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubmittedAmount", DbType="Money")] ref System.Nullable<decimal> submittedAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubmittedOverdue", DbType="Int")] ref System.Nullable<int> submittedOverdue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountExecutiveID, followUpsCount, followUpsOverdue, submittedCount, submittedAmount, submittedOverdue);
			followUpsCount = ((System.Nullable<int>)(result.GetParameterValue(1)));
			followUpsOverdue = ((System.Nullable<int>)(result.GetParameterValue(2)));
			submittedCount = ((System.Nullable<int>)(result.GetParameterValue(3)));
			submittedAmount = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			submittedOverdue = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_FollowUpsMatrix")]
		public ISingleResult<sp_web_FollowUpsMatrixResult> sp_web_FollowUpsMatrix([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(30)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionNames", DbType="VarChar(500)")] string actionNames, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CutOffDate", DbType="VarChar(100)")] string cutOffDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyInPipeLine", DbType="Bit")] System.Nullable<bool> onlyInPipeLine)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountExecutiveID, actionNames, cutOffDate, onlyInPipeLine);
			return ((ISingleResult<sp_web_FollowUpsMatrixResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_SharedFollowUps")]
		public ISingleResult<sp_web_SharedFollowUpsResult> sp_web_SharedFollowUps([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(30)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EstimatedIncomeID", DbType="Int")] System.Nullable<int> estimatedIncomeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Flagged", DbType="Int")] System.Nullable<int> flagged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Action", DbType="VarChar(30)")] string action, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CutOffDate", DbType="VarChar(100)")] string cutOffDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountExecutiveID, estimatedIncomeID, businessTypeID, flagged, action, cutOffDate);
			return ((ISingleResult<sp_web_SharedFollowUpsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_AssignQueue")]
		public int sp_web_AssignQueue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignFromAccountExecutiveID", DbType="VarChar(30)")] string assignFromAccountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignedToAccountExecutiveID", DbType="VarChar(30)")] string assignedToAccountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityIDs", DbType="Text")] string opportunityIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignFromAccountExecutiveID, assignedToAccountExecutiveID, opportunityIDs);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ShareQueue")]
		public int sp_web_ShareQueue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShareFromAccountExecutiveID", DbType="VarChar(30)")] string shareFromAccountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharedToAccountExecutiveID", DbType="VarChar(30)")] string sharedToAccountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityIDs", DbType="Text")] string opportunityIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), shareFromAccountExecutiveID, sharedToAccountExecutiveID, opportunityIDs);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_FollowUps")]
		public ISingleResult<sp_web_FollowUpsResult> sp_web_FollowUps([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(30)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EstimatedIncomeID", DbType="Int")] System.Nullable<int> estimatedIncomeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Flagged", DbType="Int")] System.Nullable<int> flagged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Action", DbType="VarChar(500)")] string action, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilteredRegion", DbType="VarChar(50)")] string filteredRegion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilteredBranch", DbType="VarChar(50)")] string filteredBranch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAll", DbType="Bit")] System.Nullable<bool> isAll)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountExecutiveID, estimatedIncomeID, businessTypeID, flagged, action, filteredRegion, filteredBranch, isAll);
			return ((ISingleResult<sp_web_FollowUpsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_rpt_DashboardTotals")]
		public ISingleResult<proc_rpt_DashboardTotalsResult> proc_rpt_DashboardTotals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region", DbType="VarChar(255)")] string region, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="VarChar(255)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassificationID", DbType="Int")] System.Nullable<int> classificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceDelimitedList", DbType="VarChar(MAX)")] string sourceDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ANZSICDelimitedList", DbType="VarChar(MAX)")] string aNZSICDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunitiesDelimitedList", DbType="VarChar(MAX)")] string opportunitiesDelimitedList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportStart, reportEnd, region, branch, businessTypeID, classificationID, sourceDelimitedList, aNZSICDelimitedList, opportunitiesDelimitedList);
			return ((ISingleResult<proc_rpt_DashboardTotalsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_rpt_DashboardDetail")]
		public ISingleResult<proc_rpt_DashboardDetailResult> proc_rpt_DashboardDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(50)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassificationID", DbType="Int")] System.Nullable<int> classificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceDelimitedList", DbType="VarChar(MAX)")] string sourceDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ANZSICDelimitedList", DbType="VarChar(MAX)")] string aNZSICDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionSet", DbType="VarChar(50)")] string actionSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultSet", DbType="VarChar(50)")] string resultSet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunitiesDelimitedList", DbType="VarChar(MAX)")] string opportunitiesDelimitedList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportStart, reportEnd, accountExecutiveID, businessTypeID, classificationID, sourceDelimitedList, aNZSICDelimitedList, actionSet, resultSet, opportunitiesDelimitedList);
			return ((ISingleResult<proc_rpt_DashboardDetailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_rpt_Tallyboard")]
		public ISingleResult<proc_rpt_TallyboardResult> proc_rpt_Tallyboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region", DbType="VarChar(255)")] string region, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="VarChar(255)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(50)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassificationID", DbType="Int")] System.Nullable<int> classificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceDelimitedList", DbType="VarChar(MAX)")] string sourceDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ANZSICDelimitedList", DbType="VarChar(MAX)")] string aNZSICDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunitiesDelimitedList", DbType="VarChar(MAX)")] string opportunitiesDelimitedList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportStart, reportEnd, region, branch, accountExecutiveID, businessTypeID, classificationID, sourceDelimitedList, aNZSICDelimitedList, opportunitiesDelimitedList);
			return ((ISingleResult<proc_rpt_TallyboardResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_rpt_Dashboard")]
		public ISingleResult<proc_rpt_DashboardResult> proc_rpt_Dashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportStart", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportEnd", DbType="SmallDateTime")] System.Nullable<System.DateTime> reportEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region", DbType="VarChar(255)")] string region, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="VarChar(255)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExecutiveID", DbType="VarChar(50)")] string accountExecutiveID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessTypeID", DbType="Int")] System.Nullable<int> businessTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassificationID", DbType="Int")] System.Nullable<int> classificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceDelimitedList", DbType="VarChar(MAX)")] string sourceDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ANZSICDelimitedList", DbType="VarChar(MAX)")] string aNZSICDelimitedList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunitiesDelimitedList", DbType="VarChar(MAX)")] string opportunitiesDelimitedList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportStart, reportEnd, region, branch, accountExecutiveID, businessTypeID, classificationID, sourceDelimitedList, aNZSICDelimitedList, opportunitiesDelimitedList);
			return ((ISingleResult<proc_rpt_DashboardResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_web_ListOpportunityActiveActivities")]
		public ISingleResult<sp_web_ListOpportunityActiveActivitiesResult> sp_web_ListOpportunityActiveActivities([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpportunityID", DbType="Int")] System.Nullable<int> opportunityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), opportunityID);
			return ((ISingleResult<sp_web_ListOpportunityActiveActivitiesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUPostCode")]
	public partial class AUPostCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PostCode;
		
		private string _StateCode;
		
		private string _Suburb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    #endregion
		
		public AUPostCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classification")]
	public partial class Classification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassificationID;
		
		private string _ClassificationName;
		
		private int _FollowUpDefault;
		
		private EntitySet<Opportunity> _Opportunities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassificationIDChanging(int value);
    partial void OnClassificationIDChanged();
    partial void OnClassificationNameChanging(string value);
    partial void OnClassificationNameChanged();
    partial void OnFollowUpDefaultChanging(int value);
    partial void OnFollowUpDefaultChanged();
    #endregion
		
		public Classification()
		{
			this._Opportunities = new EntitySet<Opportunity>(new Action<Opportunity>(this.attach_Opportunities), new Action<Opportunity>(this.detach_Opportunities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassificationID
		{
			get
			{
				return this._ClassificationID;
			}
			set
			{
				if ((this._ClassificationID != value))
				{
					this.OnClassificationIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationID = value;
					this.SendPropertyChanged("ClassificationID");
					this.OnClassificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this.OnClassificationNameChanging(value);
					this.SendPropertyChanging();
					this._ClassificationName = value;
					this.SendPropertyChanged("ClassificationName");
					this.OnClassificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDefault", DbType="Int NOT NULL")]
		public int FollowUpDefault
		{
			get
			{
				return this._FollowUpDefault;
			}
			set
			{
				if ((this._FollowUpDefault != value))
				{
					this.OnFollowUpDefaultChanging(value);
					this.SendPropertyChanging();
					this._FollowUpDefault = value;
					this.SendPropertyChanged("FollowUpDefault");
					this.OnFollowUpDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_Opportunity", Storage="_Opportunities", ThisKey="ClassificationID", OtherKey="ClassificationID")]
		public EntitySet<Opportunity> Opportunities
		{
			get
			{
				return this._Opportunities;
			}
			set
			{
				this._Opportunities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Classification = this;
		}
		
		private void detach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Classification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionLogId;
		
		private string _ShortDescription;
		
		private string _LongDescription;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionLogIdChanging(int value);
    partial void OnExceptionLogIdChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public ExceptionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExceptionLogId
		{
			get
			{
				return this._ExceptionLogId;
			}
			set
			{
				if ((this._ExceptionLogId != value))
				{
					this.OnExceptionLogIdChanging(value);
					this.SendPropertyChanging();
					this._ExceptionLogId = value;
					this.SendPropertyChanged("ExceptionLogId");
					this.OnExceptionLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MessageKey;
		
		private string _MessageText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageKeyChanging(string value);
    partial void OnMessageKeyChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    #endregion
		
		public Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageKey", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MessageKey
		{
			get
			{
				return this._MessageKey;
			}
			set
			{
				if ((this._MessageKey != value))
				{
					this.OnMessageKeyChanging(value);
					this.SendPropertyChanging();
					this._MessageKey = value;
					this.SendPropertyChanged("MessageKey");
					this.OnMessageKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(255)")]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SettingCode;
		
		private string _SettingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingCodeChanging(string value);
    partial void OnSettingCodeChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingCode
		{
			get
			{
				return this._SettingCode;
			}
			set
			{
				if ((this._SettingCode != value))
				{
					this.OnSettingCodeChanging(value);
					this.SendPropertyChanging();
					this._SettingCode = value;
					this.SendPropertyChanged("SettingCode");
					this.OnSettingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessType")]
	public partial class BusinessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessTypeID;
		
		private string _BusinessTypeName;
		
		private EntitySet<Opportunity> _Opportunities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessTypeIDChanging(int value);
    partial void OnBusinessTypeIDChanged();
    partial void OnBusinessTypeNameChanging(string value);
    partial void OnBusinessTypeNameChanged();
    #endregion
		
		public BusinessType()
		{
			this._Opportunities = new EntitySet<Opportunity>(new Action<Opportunity>(this.attach_Opportunities), new Action<Opportunity>(this.detach_Opportunities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessTypeID
		{
			get
			{
				return this._BusinessTypeID;
			}
			set
			{
				if ((this._BusinessTypeID != value))
				{
					this.OnBusinessTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessTypeID = value;
					this.SendPropertyChanged("BusinessTypeID");
					this.OnBusinessTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BusinessTypeName
		{
			get
			{
				return this._BusinessTypeName;
			}
			set
			{
				if ((this._BusinessTypeName != value))
				{
					this.OnBusinessTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessTypeName = value;
					this.SendPropertyChanged("BusinessTypeName");
					this.OnBusinessTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_Opportunity", Storage="_Opportunities", ThisKey="BusinessTypeID", OtherKey="BusinessTypeID")]
		public EntitySet<Opportunity> Opportunities
		{
			get
			{
				return this._Opportunities;
			}
			set
			{
				this._Opportunities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = this;
		}
		
		private void detach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private int _ClientID;
		
		private bool _Inactive;
		
		private string _ContactName;
		
		private string _Title;
		
		private string _Mobile;
		
		private string _DirectLine;
		
		private string _Email;
		
		private string _AddedBy;
		
		private System.DateTime _Added;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private EntitySet<Client> _Clients;
		
		private EntitySet<Opportunity> _Opportunities;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnInactiveChanging(bool value);
    partial void OnInactiveChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnDirectLineChanging(string value);
    partial void OnDirectLineChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    #endregion
		
		public Contact()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Opportunities = new EntitySet<Opportunity>(new Action<Opportunity>(this.attach_Opportunities), new Action<Opportunity>(this.detach_Opportunities));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit NOT NULL")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(25)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectLine", DbType="VarChar(25)")]
		public string DirectLine
		{
			get
			{
				return this._DirectLine;
			}
			set
			{
				if ((this._DirectLine != value))
				{
					this.OnDirectLineChanging(value);
					this.SendPropertyChanging();
					this._DirectLine = value;
					this.SendPropertyChanged("DirectLine");
					this.OnDirectLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Client", Storage="_Clients", ThisKey="ContactID", OtherKey="PrimaryContactID")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Opportunity", Storage="_Opportunities", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<Opportunity> Opportunities
		{
			get
			{
				return this._Opportunities;
			}
			set
			{
				this._Opportunities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Activity", Storage="_Activities", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Contact", Storage="_Client", ThisKey="ClientID", OtherKey="ClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._ClientID = value.ClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Industry")]
	public partial class Industry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AnzsicCode;
		
		private string _NationalBusinessLine;
		
		private string _IndustryName;
		
		private string _IndustryKeyWords;
		
		private char _IndustryGroupL1code;
		
		private string _IndustryGroupL1;
		
		private char _IndustryGroupL2code;
		
		private string _IndustryGroupL2;
		
		private char _IndustryGroupL3code;
		
		private string _IndustryGroupL3;
		
		private EntitySet<Association> _Associations;
		
		private EntitySet<Client> _Clients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnzsicCodeChanging(string value);
    partial void OnAnzsicCodeChanged();
    partial void OnNationalBusinessLineChanging(string value);
    partial void OnNationalBusinessLineChanged();
    partial void OnIndustryNameChanging(string value);
    partial void OnIndustryNameChanged();
    partial void OnIndustryKeyWordsChanging(string value);
    partial void OnIndustryKeyWordsChanged();
    partial void OnIndustryGroupL1codeChanging(char value);
    partial void OnIndustryGroupL1codeChanged();
    partial void OnIndustryGroupL1Changing(string value);
    partial void OnIndustryGroupL1Changed();
    partial void OnIndustryGroupL2codeChanging(char value);
    partial void OnIndustryGroupL2codeChanged();
    partial void OnIndustryGroupL2Changing(string value);
    partial void OnIndustryGroupL2Changed();
    partial void OnIndustryGroupL3codeChanging(char value);
    partial void OnIndustryGroupL3codeChanged();
    partial void OnIndustryGroupL3Changing(string value);
    partial void OnIndustryGroupL3Changed();
    #endregion
		
		public Industry()
		{
			this._Associations = new EntitySet<Association>(new Action<Association>(this.attach_Associations), new Action<Association>(this.detach_Associations));
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnzsicCode", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnzsicCode
		{
			get
			{
				return this._AnzsicCode;
			}
			set
			{
				if ((this._AnzsicCode != value))
				{
					this.OnAnzsicCodeChanging(value);
					this.SendPropertyChanging();
					this._AnzsicCode = value;
					this.SendPropertyChanged("AnzsicCode");
					this.OnAnzsicCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalBusinessLine", DbType="VarChar(250)")]
		public string NationalBusinessLine
		{
			get
			{
				return this._NationalBusinessLine;
			}
			set
			{
				if ((this._NationalBusinessLine != value))
				{
					this.OnNationalBusinessLineChanging(value);
					this.SendPropertyChanging();
					this._NationalBusinessLine = value;
					this.SendPropertyChanged("NationalBusinessLine");
					this.OnNationalBusinessLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string IndustryName
		{
			get
			{
				return this._IndustryName;
			}
			set
			{
				if ((this._IndustryName != value))
				{
					this.OnIndustryNameChanging(value);
					this.SendPropertyChanging();
					this._IndustryName = value;
					this.SendPropertyChanged("IndustryName");
					this.OnIndustryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryKeyWords", DbType="VarChar(1000)")]
		public string IndustryKeyWords
		{
			get
			{
				return this._IndustryKeyWords;
			}
			set
			{
				if ((this._IndustryKeyWords != value))
				{
					this.OnIndustryKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._IndustryKeyWords = value;
					this.SendPropertyChanged("IndustryKeyWords");
					this.OnIndustryKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL1code", DbType="Char(1) NOT NULL")]
		public char IndustryGroupL1code
		{
			get
			{
				return this._IndustryGroupL1code;
			}
			set
			{
				if ((this._IndustryGroupL1code != value))
				{
					this.OnIndustryGroupL1codeChanging(value);
					this.SendPropertyChanging();
					this._IndustryGroupL1code = value;
					this.SendPropertyChanged("IndustryGroupL1code");
					this.OnIndustryGroupL1codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string IndustryGroupL1
		{
			get
			{
				return this._IndustryGroupL1;
			}
			set
			{
				if ((this._IndustryGroupL1 != value))
				{
					this.OnIndustryGroupL1Changing(value);
					this.SendPropertyChanging();
					this._IndustryGroupL1 = value;
					this.SendPropertyChanged("IndustryGroupL1");
					this.OnIndustryGroupL1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL2code", DbType="Char(1) NOT NULL")]
		public char IndustryGroupL2code
		{
			get
			{
				return this._IndustryGroupL2code;
			}
			set
			{
				if ((this._IndustryGroupL2code != value))
				{
					this.OnIndustryGroupL2codeChanging(value);
					this.SendPropertyChanging();
					this._IndustryGroupL2code = value;
					this.SendPropertyChanged("IndustryGroupL2code");
					this.OnIndustryGroupL2codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string IndustryGroupL2
		{
			get
			{
				return this._IndustryGroupL2;
			}
			set
			{
				if ((this._IndustryGroupL2 != value))
				{
					this.OnIndustryGroupL2Changing(value);
					this.SendPropertyChanging();
					this._IndustryGroupL2 = value;
					this.SendPropertyChanged("IndustryGroupL2");
					this.OnIndustryGroupL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL3code", DbType="Char(1) NOT NULL")]
		public char IndustryGroupL3code
		{
			get
			{
				return this._IndustryGroupL3code;
			}
			set
			{
				if ((this._IndustryGroupL3code != value))
				{
					this.OnIndustryGroupL3codeChanging(value);
					this.SendPropertyChanging();
					this._IndustryGroupL3code = value;
					this.SendPropertyChanged("IndustryGroupL3code");
					this.OnIndustryGroupL3codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryGroupL3", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string IndustryGroupL3
		{
			get
			{
				return this._IndustryGroupL3;
			}
			set
			{
				if ((this._IndustryGroupL3 != value))
				{
					this.OnIndustryGroupL3Changing(value);
					this.SendPropertyChanging();
					this._IndustryGroupL3 = value;
					this.SendPropertyChanged("IndustryGroupL3");
					this.OnIndustryGroupL3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industry_Association", Storage="_Associations", ThisKey="AnzsicCode", OtherKey="AnzsicCode")]
		public EntitySet<Association> Associations
		{
			get
			{
				return this._Associations;
			}
			set
			{
				this._Associations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industry_Client", Storage="_Clients", ThisKey="AnzsicCode", OtherKey="AnzsicCode")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Industry = this;
		}
		
		private void detach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Industry = null;
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Industry = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Industry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Association")]
	public partial class Association : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AssociationCode;
		
		private string _AssociationName;
		
		private string _AnzsicCode;
		
		private EntitySet<Client> _Clients;
		
		private EntityRef<Industry> _Industry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssociationCodeChanging(string value);
    partial void OnAssociationCodeChanged();
    partial void OnAssociationNameChanging(string value);
    partial void OnAssociationNameChanged();
    partial void OnAnzsicCodeChanging(string value);
    partial void OnAnzsicCodeChanged();
    #endregion
		
		public Association()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Industry = default(EntityRef<Industry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AssociationCode
		{
			get
			{
				return this._AssociationCode;
			}
			set
			{
				if ((this._AssociationCode != value))
				{
					this.OnAssociationCodeChanging(value);
					this.SendPropertyChanging();
					this._AssociationCode = value;
					this.SendPropertyChanged("AssociationCode");
					this.OnAssociationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AssociationName
		{
			get
			{
				return this._AssociationName;
			}
			set
			{
				if ((this._AssociationName != value))
				{
					this.OnAssociationNameChanging(value);
					this.SendPropertyChanging();
					this._AssociationName = value;
					this.SendPropertyChanged("AssociationName");
					this.OnAssociationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnzsicCode", DbType="VarChar(4)")]
		public string AnzsicCode
		{
			get
			{
				return this._AnzsicCode;
			}
			set
			{
				if ((this._AnzsicCode != value))
				{
					if (this._Industry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnzsicCodeChanging(value);
					this.SendPropertyChanging();
					this._AnzsicCode = value;
					this.SendPropertyChanged("AnzsicCode");
					this.OnAnzsicCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Client", Storage="_Clients", ThisKey="AssociationCode", OtherKey="AssociationCode")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industry_Association", Storage="_Industry", ThisKey="AnzsicCode", OtherKey="AnzsicCode", IsForeignKey=true)]
		public Industry Industry
		{
			get
			{
				return this._Industry.Entity;
			}
			set
			{
				Industry previousValue = this._Industry.Entity;
				if (((previousValue != value) 
							|| (this._Industry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Industry.Entity = null;
						previousValue.Associations.Remove(this);
					}
					this._Industry.Entity = value;
					if ((value != null))
					{
						value.Associations.Add(this);
						this._AnzsicCode = value.AnzsicCode;
					}
					else
					{
						this._AnzsicCode = default(string);
					}
					this.SendPropertyChanged("Industry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Association = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Association = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientID;
		
		private bool _Inactive;
		
		private string _AccountExecutiveID;
		
		private string _ClientCode;
		
		private string _ClientName;
		
		private string _RegisteredName;
		
		private string _InsuredName;
		
		private string _ABNACN;
		
		private string _AnzsicCode;
		
		private string _AssociationCode;
		
		private string _AssociationMemberNumber;
		
		private string _Source;
		
		private string _Address;
		
		private string _Location;
		
		private string _StateCode;
		
		private string _PostCode;
		
		private string _OfficePhone;
		
		private string _OfficeFacsimilie;
		
		private System.Nullable<int> _PrimaryContactID;
		
		private string _AddedBy;
		
		private System.DateTime _Added;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Opportunity> _Opportunities;
		
		private EntityRef<Association> _Association;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Industry> _Industry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnInactiveChanging(bool value);
    partial void OnInactiveChanged();
    partial void OnAccountExecutiveIDChanging(string value);
    partial void OnAccountExecutiveIDChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnRegisteredNameChanging(string value);
    partial void OnRegisteredNameChanged();
    partial void OnInsuredNameChanging(string value);
    partial void OnInsuredNameChanged();
    partial void OnABNACNChanging(string value);
    partial void OnABNACNChanged();
    partial void OnAnzsicCodeChanging(string value);
    partial void OnAnzsicCodeChanged();
    partial void OnAssociationCodeChanging(string value);
    partial void OnAssociationCodeChanged();
    partial void OnAssociationMemberNumberChanging(string value);
    partial void OnAssociationMemberNumberChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnOfficePhoneChanging(string value);
    partial void OnOfficePhoneChanged();
    partial void OnOfficeFacsimilieChanging(string value);
    partial void OnOfficeFacsimilieChanged();
    partial void OnPrimaryContactIDChanging(System.Nullable<int> value);
    partial void OnPrimaryContactIDChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    #endregion
		
		public Client()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Opportunities = new EntitySet<Opportunity>(new Action<Opportunity>(this.attach_Opportunities), new Action<Opportunity>(this.detach_Opportunities));
			this._Association = default(EntityRef<Association>);
			this._Contact = default(EntityRef<Contact>);
			this._Industry = default(EntityRef<Industry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit NOT NULL")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExecutiveID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountExecutiveID
		{
			get
			{
				return this._AccountExecutiveID;
			}
			set
			{
				if ((this._AccountExecutiveID != value))
				{
					this.OnAccountExecutiveIDChanging(value);
					this.SendPropertyChanging();
					this._AccountExecutiveID = value;
					this.SendPropertyChanged("AccountExecutiveID");
					this.OnAccountExecutiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(50)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteredName", DbType="VarChar(250)")]
		public string RegisteredName
		{
			get
			{
				return this._RegisteredName;
			}
			set
			{
				if ((this._RegisteredName != value))
				{
					this.OnRegisteredNameChanging(value);
					this.SendPropertyChanging();
					this._RegisteredName = value;
					this.SendPropertyChanged("RegisteredName");
					this.OnRegisteredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuredName", DbType="VarChar(250)")]
		public string InsuredName
		{
			get
			{
				return this._InsuredName;
			}
			set
			{
				if ((this._InsuredName != value))
				{
					this.OnInsuredNameChanging(value);
					this.SendPropertyChanging();
					this._InsuredName = value;
					this.SendPropertyChanged("InsuredName");
					this.OnInsuredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABNACN", DbType="Char(11)")]
		public string ABNACN
		{
			get
			{
				return this._ABNACN;
			}
			set
			{
				if ((this._ABNACN != value))
				{
					this.OnABNACNChanging(value);
					this.SendPropertyChanging();
					this._ABNACN = value;
					this.SendPropertyChanged("ABNACN");
					this.OnABNACNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnzsicCode", DbType="VarChar(4)")]
		public string AnzsicCode
		{
			get
			{
				return this._AnzsicCode;
			}
			set
			{
				if ((this._AnzsicCode != value))
				{
					if (this._Industry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnzsicCodeChanging(value);
					this.SendPropertyChanging();
					this._AnzsicCode = value;
					this.SendPropertyChanged("AnzsicCode");
					this.OnAnzsicCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationCode", DbType="VarChar(20)")]
		public string AssociationCode
		{
			get
			{
				return this._AssociationCode;
			}
			set
			{
				if ((this._AssociationCode != value))
				{
					if (this._Association.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssociationCodeChanging(value);
					this.SendPropertyChanging();
					this._AssociationCode = value;
					this.SendPropertyChanged("AssociationCode");
					this.OnAssociationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationMemberNumber", DbType="VarChar(50)")]
		public string AssociationMemberNumber
		{
			get
			{
				return this._AssociationMemberNumber;
			}
			set
			{
				if ((this._AssociationMemberNumber != value))
				{
					this.OnAssociationMemberNumberChanging(value);
					this.SendPropertyChanging();
					this._AssociationMemberNumber = value;
					this.SendPropertyChanged("AssociationMemberNumber");
					this.OnAssociationMemberNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(150)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(3)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(4)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhone", DbType="VarChar(20)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this.OnOfficePhoneChanging(value);
					this.SendPropertyChanging();
					this._OfficePhone = value;
					this.SendPropertyChanged("OfficePhone");
					this.OnOfficePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeFacsimilie", DbType="VarChar(20)")]
		public string OfficeFacsimilie
		{
			get
			{
				return this._OfficeFacsimilie;
			}
			set
			{
				if ((this._OfficeFacsimilie != value))
				{
					this.OnOfficeFacsimilieChanging(value);
					this.SendPropertyChanging();
					this._OfficeFacsimilie = value;
					this.SendPropertyChanged("OfficeFacsimilie");
					this.OnOfficeFacsimilieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactID", DbType="Int")]
		public System.Nullable<int> PrimaryContactID
		{
			get
			{
				return this._PrimaryContactID;
			}
			set
			{
				if ((this._PrimaryContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryContactIDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactID = value;
					this.SendPropertyChanged("PrimaryContactID");
					this.OnPrimaryContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Contact", Storage="_Contacts", ThisKey="ClientID", OtherKey="ClientID")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Opportunity", Storage="_Opportunities", ThisKey="ClientID", OtherKey="ClientID")]
		public EntitySet<Opportunity> Opportunities
		{
			get
			{
				return this._Opportunities;
			}
			set
			{
				this._Opportunities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Client", Storage="_Association", ThisKey="AssociationCode", OtherKey="AssociationCode", IsForeignKey=true)]
		public Association Association
		{
			get
			{
				return this._Association.Entity;
			}
			set
			{
				Association previousValue = this._Association.Entity;
				if (((previousValue != value) 
							|| (this._Association.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Association.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Association.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._AssociationCode = value.AssociationCode;
					}
					else
					{
						this._AssociationCode = default(string);
					}
					this.SendPropertyChanged("Association");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Client", Storage="_Contact", ThisKey="PrimaryContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._PrimaryContactID = value.ContactID;
					}
					else
					{
						this._PrimaryContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Industry_Client", Storage="_Industry", ThisKey="AnzsicCode", OtherKey="AnzsicCode", IsForeignKey=true)]
		public Industry Industry
		{
			get
			{
				return this._Industry.Entity;
			}
			set
			{
				Industry previousValue = this._Industry.Entity;
				if (((previousValue != value) 
							|| (this._Industry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Industry.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Industry.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._AnzsicCode = value.AnzsicCode;
					}
					else
					{
						this._AnzsicCode = default(string);
					}
					this.SendPropertyChanged("Industry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Opportunities(Opportunity entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchRegion")]
	public partial class BranchRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Branch;
		
		private string _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
		
		public BranchRegion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Action;
		
		private string _Phase;
		
		private string _OutcomeType;
		
		private System.Nullable<int> _PreviousStatusID;
		
		private EntitySet<Status> _Status2;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<Status> _Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnPhaseChanging(string value);
    partial void OnPhaseChanged();
    partial void OnOutcomeTypeChanging(string value);
    partial void OnOutcomeTypeChanged();
    partial void OnPreviousStatusIDChanging(System.Nullable<int> value);
    partial void OnPreviousStatusIDChanged();
    #endregion
		
		public Status()
		{
			this._Status2 = new EntitySet<Status>(new Action<Status>(this.attach_Status2), new Action<Status>(this.detach_Status2));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Status1 = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this.OnPhaseChanging(value);
					this.SendPropertyChanging();
					this._Phase = value;
					this.SendPropertyChanged("Phase");
					this.OnPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutcomeType", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string OutcomeType
		{
			get
			{
				return this._OutcomeType;
			}
			set
			{
				if ((this._OutcomeType != value))
				{
					this.OnOutcomeTypeChanging(value);
					this.SendPropertyChanging();
					this._OutcomeType = value;
					this.SendPropertyChanged("OutcomeType");
					this.OnOutcomeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStatusID", DbType="Int")]
		public System.Nullable<int> PreviousStatusID
		{
			get
			{
				return this._PreviousStatusID;
			}
			set
			{
				if ((this._PreviousStatusID != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreviousStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PreviousStatusID = value;
					this.SendPropertyChanged("PreviousStatusID");
					this.OnPreviousStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Status", Storage="_Status2", ThisKey="StatusID", OtherKey="PreviousStatusID")]
		public EntitySet<Status> Status2
		{
			get
			{
				return this._Status2;
			}
			set
			{
				this._Status2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity", Storage="_Activities", ThisKey="StatusID", OtherKey="OpportunityStatusID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Status", Storage="_Status1", ThisKey="PreviousStatusID", OtherKey="StatusID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Status2.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Status2.Add(this);
						this._PreviousStatusID = value.StatusID;
					}
					else
					{
						this._PreviousStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Status2(Status entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_Status2(Status entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_ibais_TeamList]")]
	public partial class _ibais_TeamList
	{
		
		private string _Ledger_Code;
		
		private string _Executive_Code;
		
		private string _Executive_Name;
		
		private string _SAM_Account_Name;
		
		private string _Team_Code;
		
		private string _Team_Name;
		
		private string _IsMember;
		
		private string _IsTeamLeader;
		
		private string _Reporting_Branch_Name;
		
		private string _Reporting_Region_Name;
		
		private string _Email;
		
		private string _TeamLeaderName;
		
		public _ibais_TeamList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ledger_Code", DbType="NVarChar(255)")]
		public string Ledger_Code
		{
			get
			{
				return this._Ledger_Code;
			}
			set
			{
				if ((this._Ledger_Code != value))
				{
					this._Ledger_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executive_Code", DbType="NVarChar(255)")]
		public string Executive_Code
		{
			get
			{
				return this._Executive_Code;
			}
			set
			{
				if ((this._Executive_Code != value))
				{
					this._Executive_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executive_Name", DbType="NVarChar(255)")]
		public string Executive_Name
		{
			get
			{
				return this._Executive_Name;
			}
			set
			{
				if ((this._Executive_Name != value))
				{
					this._Executive_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[SAM Account Name]", Storage="_SAM_Account_Name", DbType="NVarChar(255)")]
		public string SAM_Account_Name
		{
			get
			{
				return this._SAM_Account_Name;
			}
			set
			{
				if ((this._SAM_Account_Name != value))
				{
					this._SAM_Account_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team_Code", DbType="NVarChar(255)")]
		public string Team_Code
		{
			get
			{
				return this._Team_Code;
			}
			set
			{
				if ((this._Team_Code != value))
				{
					this._Team_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team_Name", DbType="NVarChar(255)")]
		public string Team_Name
		{
			get
			{
				return this._Team_Name;
			}
			set
			{
				if ((this._Team_Name != value))
				{
					this._Team_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMember", DbType="NVarChar(255)")]
		public string IsMember
		{
			get
			{
				return this._IsMember;
			}
			set
			{
				if ((this._IsMember != value))
				{
					this._IsMember = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeamLeader", DbType="NVarChar(255)")]
		public string IsTeamLeader
		{
			get
			{
				return this._IsTeamLeader;
			}
			set
			{
				if ((this._IsTeamLeader != value))
				{
					this._IsTeamLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporting_Branch_Name", DbType="NVarChar(255)")]
		public string Reporting_Branch_Name
		{
			get
			{
				return this._Reporting_Branch_Name;
			}
			set
			{
				if ((this._Reporting_Branch_Name != value))
				{
					this._Reporting_Branch_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporting_Region_Name", DbType="NVarChar(255)")]
		public string Reporting_Region_Name
		{
			get
			{
				return this._Reporting_Region_Name;
			}
			set
			{
				if ((this._Reporting_Region_Name != value))
				{
					this._Reporting_Region_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamLeaderName", DbType="NVarChar(255)")]
		public string TeamLeaderName
		{
			get
			{
				return this._TeamLeaderName;
			}
			set
			{
				if ((this._TeamLeaderName != value))
				{
					this._TeamLeaderName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionLogID;
		
		private int _ID;
		
		private string _TableName;
		
		private string _Action;
		
		private string _Detail;
		
		private System.DateTime _ActionDate;
		
		private string _ActionedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionLogIDChanging(int value);
    partial void OnActionLogIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    partial void OnActionedByChanging(string value);
    partial void OnActionedByChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionLogID
		{
			get
			{
				return this._ActionLogID;
			}
			set
			{
				if ((this._ActionLogID != value))
				{
					this.OnActionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ActionLogID = value;
					this.SendPropertyChanged("ActionLogID");
					this.OnActionLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionedBy", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string ActionedBy
		{
			get
			{
				return this._ActionedBy;
			}
			set
			{
				if ((this._ActionedBy != value))
				{
					this.OnActionedByChanging(value);
					this.SendPropertyChanging();
					this._ActionedBy = value;
					this.SendPropertyChanged("ActionedBy");
					this.OnActionedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opportunity")]
	public partial class Opportunity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OpportunityID;
		
		private bool _Inactive;
		
		private bool _Flagged;
		
		private int _ClientID;
		
		private string _OpportunityName;
		
		private System.Nullable<System.DateTime> _OpportunityDue;
		
		private string _IncumbentBroker;
		
		private string _IncumbentInsurer;
		
		private System.Nullable<int> _ClassificationID;
		
		private System.Nullable<int> _BusinessTypeID;
		
		private System.Nullable<decimal> _NetBrokerageQuoted;
		
		private System.Nullable<decimal> _NetBrokerageActual;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private string _MemoNumber;
		
		private System.Nullable<int> _ContactID;
		
		private string _AddedBy;
		
		private System.DateTime _Added;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private System.Nullable<decimal> _NetBrokerageEstimated;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<BusinessType> _BusinessType;
		
		private EntityRef<Classification> _Classification;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpportunityIDChanging(int value);
    partial void OnOpportunityIDChanged();
    partial void OnInactiveChanging(bool value);
    partial void OnInactiveChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnOpportunityNameChanging(string value);
    partial void OnOpportunityNameChanged();
    partial void OnOpportunityDueChanging(System.Nullable<System.DateTime> value);
    partial void OnOpportunityDueChanged();
    partial void OnIncumbentBrokerChanging(string value);
    partial void OnIncumbentBrokerChanged();
    partial void OnIncumbentInsurerChanging(string value);
    partial void OnIncumbentInsurerChanged();
    partial void OnClassificationIDChanging(System.Nullable<int> value);
    partial void OnClassificationIDChanged();
    partial void OnBusinessTypeIDChanging(System.Nullable<int> value);
    partial void OnBusinessTypeIDChanged();
    partial void OnNetBrokerageQuotedChanging(System.Nullable<decimal> value);
    partial void OnNetBrokerageQuotedChanged();
    partial void OnNetBrokerageActualChanging(System.Nullable<decimal> value);
    partial void OnNetBrokerageActualChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    partial void OnMemoNumberChanging(string value);
    partial void OnMemoNumberChanged();
    partial void OnContactIDChanging(System.Nullable<int> value);
    partial void OnContactIDChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnNetBrokerageEstimatedChanging(System.Nullable<decimal> value);
    partial void OnNetBrokerageEstimatedChanged();
    #endregion
		
		public Opportunity()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._BusinessType = default(EntityRef<BusinessType>);
			this._Classification = default(EntityRef<Classification>);
			this._Client = default(EntityRef<Client>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this.OnOpportunityIDChanging(value);
					this.SendPropertyChanging();
					this._OpportunityID = value;
					this.SendPropertyChanged("OpportunityID");
					this.OnOpportunityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit NOT NULL")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this.OnFlaggedChanging(value);
					this.SendPropertyChanging();
					this._Flagged = value;
					this.SendPropertyChanged("Flagged");
					this.OnFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OpportunityName
		{
			get
			{
				return this._OpportunityName;
			}
			set
			{
				if ((this._OpportunityName != value))
				{
					this.OnOpportunityNameChanging(value);
					this.SendPropertyChanging();
					this._OpportunityName = value;
					this.SendPropertyChanged("OpportunityName");
					this.OnOpportunityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityDue", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OpportunityDue
		{
			get
			{
				return this._OpportunityDue;
			}
			set
			{
				if ((this._OpportunityDue != value))
				{
					this.OnOpportunityDueChanging(value);
					this.SendPropertyChanging();
					this._OpportunityDue = value;
					this.SendPropertyChanged("OpportunityDue");
					this.OnOpportunityDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncumbentBroker", DbType="VarChar(100)")]
		public string IncumbentBroker
		{
			get
			{
				return this._IncumbentBroker;
			}
			set
			{
				if ((this._IncumbentBroker != value))
				{
					this.OnIncumbentBrokerChanging(value);
					this.SendPropertyChanging();
					this._IncumbentBroker = value;
					this.SendPropertyChanged("IncumbentBroker");
					this.OnIncumbentBrokerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncumbentInsurer", DbType="VarChar(100)")]
		public string IncumbentInsurer
		{
			get
			{
				return this._IncumbentInsurer;
			}
			set
			{
				if ((this._IncumbentInsurer != value))
				{
					this.OnIncumbentInsurerChanging(value);
					this.SendPropertyChanging();
					this._IncumbentInsurer = value;
					this.SendPropertyChanged("IncumbentInsurer");
					this.OnIncumbentInsurerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationID", DbType="Int")]
		public System.Nullable<int> ClassificationID
		{
			get
			{
				return this._ClassificationID;
			}
			set
			{
				if ((this._ClassificationID != value))
				{
					if (this._Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassificationIDChanging(value);
					this.SendPropertyChanging();
					this._ClassificationID = value;
					this.SendPropertyChanged("ClassificationID");
					this.OnClassificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeID", DbType="Int")]
		public System.Nullable<int> BusinessTypeID
		{
			get
			{
				return this._BusinessTypeID;
			}
			set
			{
				if ((this._BusinessTypeID != value))
				{
					if (this._BusinessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessTypeID = value;
					this.SendPropertyChanged("BusinessTypeID");
					this.OnBusinessTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageQuoted", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageQuoted
		{
			get
			{
				return this._NetBrokerageQuoted;
			}
			set
			{
				if ((this._NetBrokerageQuoted != value))
				{
					this.OnNetBrokerageQuotedChanging(value);
					this.SendPropertyChanging();
					this._NetBrokerageQuoted = value;
					this.SendPropertyChanged("NetBrokerageQuoted");
					this.OnNetBrokerageQuotedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageActual", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageActual
		{
			get
			{
				return this._NetBrokerageActual;
			}
			set
			{
				if ((this._NetBrokerageActual != value))
				{
					this.OnNetBrokerageActualChanging(value);
					this.SendPropertyChanging();
					this._NetBrokerageActual = value;
					this.SendPropertyChanged("NetBrokerageActual");
					this.OnNetBrokerageActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoNumber", DbType="VarChar(50)")]
		public string MemoNumber
		{
			get
			{
				return this._MemoNumber;
			}
			set
			{
				if ((this._MemoNumber != value))
				{
					this.OnMemoNumberChanging(value);
					this.SendPropertyChanging();
					this._MemoNumber = value;
					this.SendPropertyChanged("MemoNumber");
					this.OnMemoNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageEstimated", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageEstimated
		{
			get
			{
				return this._NetBrokerageEstimated;
			}
			set
			{
				if ((this._NetBrokerageEstimated != value))
				{
					this.OnNetBrokerageEstimatedChanging(value);
					this.SendPropertyChanging();
					this._NetBrokerageEstimated = value;
					this.SendPropertyChanged("NetBrokerageEstimated");
					this.OnNetBrokerageEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opportunity_Activity", Storage="_Activities", ThisKey="OpportunityID", OtherKey="OpportunityID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_Opportunity", Storage="_BusinessType", ThisKey="BusinessTypeID", OtherKey="BusinessTypeID", IsForeignKey=true)]
		public BusinessType BusinessType
		{
			get
			{
				return this._BusinessType.Entity;
			}
			set
			{
				BusinessType previousValue = this._BusinessType.Entity;
				if (((previousValue != value) 
							|| (this._BusinessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessType.Entity = null;
						previousValue.Opportunities.Remove(this);
					}
					this._BusinessType.Entity = value;
					if ((value != null))
					{
						value.Opportunities.Add(this);
						this._BusinessTypeID = value.BusinessTypeID;
					}
					else
					{
						this._BusinessTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BusinessType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classification_Opportunity", Storage="_Classification", ThisKey="ClassificationID", OtherKey="ClassificationID", IsForeignKey=true)]
		public Classification Classification
		{
			get
			{
				return this._Classification.Entity;
			}
			set
			{
				Classification previousValue = this._Classification.Entity;
				if (((previousValue != value) 
							|| (this._Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classification.Entity = null;
						previousValue.Opportunities.Remove(this);
					}
					this._Classification.Entity = value;
					if ((value != null))
					{
						value.Opportunities.Add(this);
						this._ClassificationID = value.ClassificationID;
					}
					else
					{
						this._ClassificationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Opportunity", Storage="_Client", ThisKey="ClientID", OtherKey="ClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Opportunities.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Opportunities.Add(this);
						this._ClientID = value.ClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Opportunity", Storage="_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Opportunities.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Opportunities.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Opportunity = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Opportunity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityID;
		
		private bool _Inactive;
		
		private int _OpportunityID;
		
		private int _OpportunityStatusID;
		
		private string _ActivityNote;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		private System.Nullable<int> _ContactID;
		
		private string _AddedBy;
		
		private System.DateTime _Added;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Opportunity> _Opportunity;
		
		private EntityRef<Status> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnInactiveChanging(bool value);
    partial void OnInactiveChanged();
    partial void OnOpportunityIDChanging(int value);
    partial void OnOpportunityIDChanged();
    partial void OnOpportunityStatusIDChanging(int value);
    partial void OnOpportunityStatusIDChanged();
    partial void OnActivityNoteChanging(string value);
    partial void OnActivityNoteChanged();
    partial void OnFollowUpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFollowUpDateChanged();
    partial void OnContactIDChanging(System.Nullable<int> value);
    partial void OnContactIDChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    #endregion
		
		public Activity()
		{
			this._Contact = default(EntityRef<Contact>);
			this._Opportunity = default(EntityRef<Opportunity>);
			this._Status = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit NOT NULL")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					if (this._Opportunity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpportunityIDChanging(value);
					this.SendPropertyChanging();
					this._OpportunityID = value;
					this.SendPropertyChanged("OpportunityID");
					this.OnOpportunityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityStatusID", DbType="Int NOT NULL")]
		public int OpportunityStatusID
		{
			get
			{
				return this._OpportunityStatusID;
			}
			set
			{
				if ((this._OpportunityStatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpportunityStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OpportunityStatusID = value;
					this.SendPropertyChanged("OpportunityStatusID");
					this.OnOpportunityStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ActivityNote
		{
			get
			{
				return this._ActivityNote;
			}
			set
			{
				if ((this._ActivityNote != value))
				{
					this.OnActivityNoteChanging(value);
					this.SendPropertyChanging();
					this._ActivityNote = value;
					this.SendPropertyChanged("ActivityNote");
					this.OnActivityNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this.OnFollowUpDateChanging(value);
					this.SendPropertyChanging();
					this._FollowUpDate = value;
					this.SendPropertyChanged("FollowUpDate");
					this.OnFollowUpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Activity", Storage="_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opportunity_Activity", Storage="_Opportunity", ThisKey="OpportunityID", OtherKey="OpportunityID", IsForeignKey=true)]
		public Opportunity Opportunity
		{
			get
			{
				return this._Opportunity.Entity;
			}
			set
			{
				Opportunity previousValue = this._Opportunity.Entity;
				if (((previousValue != value) 
							|| (this._Opportunity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opportunity.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Opportunity.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._OpportunityID = value.OpportunityID;
					}
					else
					{
						this._OpportunityID = default(int);
					}
					this.SendPropertyChanged("Opportunity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity", Storage="_Status", ThisKey="OpportunityStatusID", OtherKey="StatusID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._OpportunityStatusID = value.StatusID;
					}
					else
					{
						this._OpportunityStatusID = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_web_ListLogsResult
	{
		
		private int _ExceptionLogId;
		
		private string _ShortDescription;
		
		private string _LongDescription;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		public sp_web_ListLogsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionLogId", DbType="Int NOT NULL")]
		public int ExceptionLogId
		{
			get
			{
				return this._ExceptionLogId;
			}
			set
			{
				if ((this._ExceptionLogId != value))
				{
					this._ExceptionLogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this._ShortDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
	}
	
	public partial class sp_web_GetCurrentOpportunityStatusResult
	{
		
		private int _OpportunityStatusID;
		
		private string _StatusName;
		
		public sp_web_GetCurrentOpportunityStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityStatusID", DbType="Int NOT NULL")]
		public int OpportunityStatusID
		{
			get
			{
				return this._OpportunityStatusID;
			}
			set
			{
				if ((this._OpportunityStatusID != value))
				{
					this._OpportunityStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListClientOpenOpportunitiesResult
	{
		
		private int _ClientID;
		
		private int _OpportunityID;
		
		private string _OpportunityName;
		
		private bool _Flagged;
		
		private string _BusinessTypeName;
		
		private string _ClassificationName;
		
		private string _StatusName;
		
		private System.DateTime _Added;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		public sp_web_ListClientOpenOpportunitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this._OpportunityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OpportunityName
		{
			get
			{
				return this._OpportunityName;
			}
			set
			{
				if ((this._OpportunityName != value))
				{
					this._OpportunityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this._Flagged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeName", DbType="VarChar(50)")]
		public string BusinessTypeName
		{
			get
			{
				return this._BusinessTypeName;
			}
			set
			{
				if ((this._BusinessTypeName != value))
				{
					this._BusinessTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="VarChar(50)")]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this._ClassificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this._FollowUpDate = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListClientClosedOpportunitiesResult
	{
		
		private int _ClientID;
		
		private int _OpportunityID;
		
		private string _OpportunityName;
		
		private bool _Flagged;
		
		private string _BusinessTypeName;
		
		private string _ClassificationName;
		
		private string _StatusName;
		
		private System.DateTime _Added;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		public sp_web_ListClientClosedOpportunitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this._OpportunityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OpportunityName
		{
			get
			{
				return this._OpportunityName;
			}
			set
			{
				if ((this._OpportunityName != value))
				{
					this._OpportunityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this._Flagged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeName", DbType="VarChar(50)")]
		public string BusinessTypeName
		{
			get
			{
				return this._BusinessTypeName;
			}
			set
			{
				if ((this._BusinessTypeName != value))
				{
					this._BusinessTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="VarChar(50)")]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this._ClassificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this._FollowUpDate = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListOpportunityInactiveActivitiesResult
	{
		
		private int _ActivityID;
		
		private string _StatusDescription;
		
		private System.DateTime _Added;
		
		private string _ActivityNote;
		
		public sp_web_ListOpportunityInactiveActivitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDescription", DbType="VarChar(81)")]
		public string StatusDescription
		{
			get
			{
				return this._StatusDescription;
			}
			set
			{
				if ((this._StatusDescription != value))
				{
					this._StatusDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ActivityNote
		{
			get
			{
				return this._ActivityNote;
			}
			set
			{
				if ((this._ActivityNote != value))
				{
					this._ActivityNote = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListClientContactsResult
	{
		
		private int _ContactID;
		
		private string _ContactName;
		
		public sp_web_ListClientContactsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int NOT NULL")]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListNextOpportunityStatusesResult
	{
		
		private int _StatusID;
		
		private string _StatusName;
		
		public sp_web_ListNextOpportunityStatusesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListCurrentOpportunityStatusesResult
	{
		
		private int _StatusID;
		
		private string _StatusName;
		
		public sp_web_ListCurrentOpportunityStatusesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_web_FindClientByFieldResult
	{
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _Location;
		
		private string _AccountExecutiveID;
		
		private string _DisplayName;
		
		private string _Matched;
		
		private string _Match;
		
		private bool _Inactive;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		public sp_web_FindClientByFieldResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(56)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExecutiveID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountExecutiveID
		{
			get
			{
				return this._AccountExecutiveID;
			}
			set
			{
				if ((this._AccountExecutiveID != value))
				{
					this._AccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(30)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matched", DbType="VarChar(260)")]
		public string Matched
		{
			get
			{
				return this._Matched;
			}
			set
			{
				if ((this._Matched != value))
				{
					this._Matched = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Match", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Match
		{
			get
			{
				return this._Match;
			}
			set
			{
				if ((this._Match != value))
				{
					this._Match = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit NOT NULL")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this._Inactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this._FollowUpDate = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListStatusesByOutcomeTypeResult
	{
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Action;
		
		private string _Phase;
		
		public sp_web_ListStatusesByOutcomeTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this._Phase = value;
				}
			}
		}
	}
	
	public partial class proc_rpt_DashboardNorthSydneyResult
	{
		
		private string _ListBy;
		
		private int _Order;
		
		private string _ResultSet;
		
		private System.Nullable<int> _Pipeline;
		
		private System.Nullable<int> _Recognise;
		
		private System.Nullable<int> _Qualify;
		
		private System.Nullable<int> _Contact;
		
		private System.Nullable<int> _Discover;
		
		private System.Nullable<int> _Respond;
		
		private System.Nullable<int> _Agree;
		
		private System.Nullable<int> _Process;
		
		private System.Nullable<int> _Due;
		
		private decimal _Quoted;
		
		private decimal _Actual;
		
		public proc_rpt_DashboardNorthSydneyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListBy", DbType="NVarChar(255)")]
		public string ListBy
		{
			get
			{
				return this._ListBy;
			}
			set
			{
				if ((this._ListBy != value))
				{
					this._ListBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultSet", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string ResultSet
		{
			get
			{
				return this._ResultSet;
			}
			set
			{
				if ((this._ResultSet != value))
				{
					this._ResultSet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pipeline", DbType="Int")]
		public System.Nullable<int> Pipeline
		{
			get
			{
				return this._Pipeline;
			}
			set
			{
				if ((this._Pipeline != value))
				{
					this._Pipeline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recognise", DbType="Int")]
		public System.Nullable<int> Recognise
		{
			get
			{
				return this._Recognise;
			}
			set
			{
				if ((this._Recognise != value))
				{
					this._Recognise = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualify", DbType="Int")]
		public System.Nullable<int> Qualify
		{
			get
			{
				return this._Qualify;
			}
			set
			{
				if ((this._Qualify != value))
				{
					this._Qualify = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="Int")]
		public System.Nullable<int> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discover", DbType="Int")]
		public System.Nullable<int> Discover
		{
			get
			{
				return this._Discover;
			}
			set
			{
				if ((this._Discover != value))
				{
					this._Discover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respond", DbType="Int")]
		public System.Nullable<int> Respond
		{
			get
			{
				return this._Respond;
			}
			set
			{
				if ((this._Respond != value))
				{
					this._Respond = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agree", DbType="Int")]
		public System.Nullable<int> Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this._Agree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="Int")]
		public System.Nullable<int> Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this._Process = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Int")]
		public System.Nullable<int> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this._Due = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quoted", DbType="Decimal(0,0) NOT NULL")]
		public decimal Quoted
		{
			get
			{
				return this._Quoted;
			}
			set
			{
				if ((this._Quoted != value))
				{
					this._Quoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual", DbType="Decimal(0,0) NOT NULL")]
		public decimal Actual
		{
			get
			{
				return this._Actual;
			}
			set
			{
				if ((this._Actual != value))
				{
					this._Actual = value;
				}
			}
		}
	}
	
	public partial class sp_web_FollowUpsMatrixResult
	{
		
		private string _AccountExecutiveID;
		
		private int _NoOppo;
		
		private decimal _Estimated;
		
		private decimal _Quoted;
		
		private decimal _Actual;
		
		public sp_web_FollowUpsMatrixResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExecutiveID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountExecutiveID
		{
			get
			{
				return this._AccountExecutiveID;
			}
			set
			{
				if ((this._AccountExecutiveID != value))
				{
					this._AccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOppo", DbType="Int NOT NULL")]
		public int NoOppo
		{
			get
			{
				return this._NoOppo;
			}
			set
			{
				if ((this._NoOppo != value))
				{
					this._NoOppo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estimated", DbType="Decimal(38,2) NOT NULL")]
		public decimal Estimated
		{
			get
			{
				return this._Estimated;
			}
			set
			{
				if ((this._Estimated != value))
				{
					this._Estimated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quoted", DbType="Decimal(38,2) NOT NULL")]
		public decimal Quoted
		{
			get
			{
				return this._Quoted;
			}
			set
			{
				if ((this._Quoted != value))
				{
					this._Quoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual", DbType="Decimal(38,2) NOT NULL")]
		public decimal Actual
		{
			get
			{
				return this._Actual;
			}
			set
			{
				if ((this._Actual != value))
				{
					this._Actual = value;
				}
			}
		}
	}
	
	public partial class sp_web_SharedFollowUpsResult
	{
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _SharedWithAccountExecutiveID;
		
		private int _OpportunityID;
		
		private string _OpportunityName;
		
		private string _BusinessTypeName;
		
		private bool _Flagged;
		
		private System.DateTime _Added;
		
		private System.Nullable<System.DateTime> _OpportunityDue;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		private string _StatusName;
		
		private string _Action;
		
		private string _OutcomeType;
		
		private string _ClassificationName;
		
		public sp_web_SharedFollowUpsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharedWithAccountExecutiveID", DbType="VarChar(30)")]
		public string SharedWithAccountExecutiveID
		{
			get
			{
				return this._SharedWithAccountExecutiveID;
			}
			set
			{
				if ((this._SharedWithAccountExecutiveID != value))
				{
					this._SharedWithAccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this._OpportunityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OpportunityName
		{
			get
			{
				return this._OpportunityName;
			}
			set
			{
				if ((this._OpportunityName != value))
				{
					this._OpportunityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeName", DbType="VarChar(50)")]
		public string BusinessTypeName
		{
			get
			{
				return this._BusinessTypeName;
			}
			set
			{
				if ((this._BusinessTypeName != value))
				{
					this._BusinessTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this._Flagged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityDue", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OpportunityDue
		{
			get
			{
				return this._OpportunityDue;
			}
			set
			{
				if ((this._OpportunityDue != value))
				{
					this._OpportunityDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this._FollowUpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutcomeType", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string OutcomeType
		{
			get
			{
				return this._OutcomeType;
			}
			set
			{
				if ((this._OutcomeType != value))
				{
					this._OutcomeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="VarChar(50)")]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this._ClassificationName = value;
				}
			}
		}
	}
	
	public partial class sp_web_FollowUpsResult
	{
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _SharedWithAccountExecutiveID;
		
		private string _AccountExecutiveID;
		
		private int _OpportunityID;
		
		private string _OpportunityName;
		
		private System.Nullable<decimal> _NetBrokerageEstimated;
		
		private System.Nullable<decimal> _NetBrokerageQuoted;
		
		private System.Nullable<decimal> _NetBrokerageActual;
		
		private string _BusinessTypeName;
		
		private bool _Flagged;
		
		private System.DateTime _Added;
		
		private System.Nullable<System.DateTime> _OpportunityDue;
		
		private System.Nullable<System.DateTime> _FollowUpDate;
		
		private string _StatusName;
		
		private string _Action;
		
		private string _OutcomeType;
		
		private string _ClassificationName;
		
		private string _Region;
		
		public sp_web_FollowUpsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharedWithAccountExecutiveID", DbType="VarChar(30)")]
		public string SharedWithAccountExecutiveID
		{
			get
			{
				return this._SharedWithAccountExecutiveID;
			}
			set
			{
				if ((this._SharedWithAccountExecutiveID != value))
				{
					this._SharedWithAccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExecutiveID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountExecutiveID
		{
			get
			{
				return this._AccountExecutiveID;
			}
			set
			{
				if ((this._AccountExecutiveID != value))
				{
					this._AccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this._OpportunityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string OpportunityName
		{
			get
			{
				return this._OpportunityName;
			}
			set
			{
				if ((this._OpportunityName != value))
				{
					this._OpportunityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageEstimated", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageEstimated
		{
			get
			{
				return this._NetBrokerageEstimated;
			}
			set
			{
				if ((this._NetBrokerageEstimated != value))
				{
					this._NetBrokerageEstimated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageQuoted", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageQuoted
		{
			get
			{
				return this._NetBrokerageQuoted;
			}
			set
			{
				if ((this._NetBrokerageQuoted != value))
				{
					this._NetBrokerageQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerageActual", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerageActual
		{
			get
			{
				return this._NetBrokerageActual;
			}
			set
			{
				if ((this._NetBrokerageActual != value))
				{
					this._NetBrokerageActual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessTypeName", DbType="VarChar(50)")]
		public string BusinessTypeName
		{
			get
			{
				return this._BusinessTypeName;
			}
			set
			{
				if ((this._BusinessTypeName != value))
				{
					this._BusinessTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
		public bool Flagged
		{
			get
			{
				return this._Flagged;
			}
			set
			{
				if ((this._Flagged != value))
				{
					this._Flagged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityDue", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OpportunityDue
		{
			get
			{
				return this._OpportunityDue;
			}
			set
			{
				if ((this._OpportunityDue != value))
				{
					this._OpportunityDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpDate
		{
			get
			{
				return this._FollowUpDate;
			}
			set
			{
				if ((this._FollowUpDate != value))
				{
					this._FollowUpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutcomeType", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string OutcomeType
		{
			get
			{
				return this._OutcomeType;
			}
			set
			{
				if ((this._OutcomeType != value))
				{
					this._OutcomeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="VarChar(50)")]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this._ClassificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
	}
	
	public partial class proc_rpt_DashboardTotalsResult
	{
		
		private string _ListByID;
		
		private string _ListBy;
		
		private int _Order;
		
		private string _ResultSet;
		
		private System.Nullable<int> _Pipeline;
		
		private System.Nullable<int> _Recognise;
		
		private System.Nullable<int> _Qualify;
		
		private System.Nullable<int> _Contact;
		
		private System.Nullable<int> _Discover;
		
		private System.Nullable<int> _Respond;
		
		private System.Nullable<int> _Agree;
		
		private System.Nullable<int> _Process;
		
		private System.Nullable<int> _Due;
		
		private System.Nullable<decimal> _Quoted;
		
		private System.Nullable<decimal> _Actual;
		
		public proc_rpt_DashboardTotalsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListByID", DbType="NVarChar(256)")]
		public string ListByID
		{
			get
			{
				return this._ListByID;
			}
			set
			{
				if ((this._ListByID != value))
				{
					this._ListByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListBy", DbType="NVarChar(256)")]
		public string ListBy
		{
			get
			{
				return this._ListBy;
			}
			set
			{
				if ((this._ListBy != value))
				{
					this._ListBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultSet", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string ResultSet
		{
			get
			{
				return this._ResultSet;
			}
			set
			{
				if ((this._ResultSet != value))
				{
					this._ResultSet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pipeline", DbType="Int")]
		public System.Nullable<int> Pipeline
		{
			get
			{
				return this._Pipeline;
			}
			set
			{
				if ((this._Pipeline != value))
				{
					this._Pipeline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recognise", DbType="Int")]
		public System.Nullable<int> Recognise
		{
			get
			{
				return this._Recognise;
			}
			set
			{
				if ((this._Recognise != value))
				{
					this._Recognise = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualify", DbType="Int")]
		public System.Nullable<int> Qualify
		{
			get
			{
				return this._Qualify;
			}
			set
			{
				if ((this._Qualify != value))
				{
					this._Qualify = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="Int")]
		public System.Nullable<int> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discover", DbType="Int")]
		public System.Nullable<int> Discover
		{
			get
			{
				return this._Discover;
			}
			set
			{
				if ((this._Discover != value))
				{
					this._Discover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respond", DbType="Int")]
		public System.Nullable<int> Respond
		{
			get
			{
				return this._Respond;
			}
			set
			{
				if ((this._Respond != value))
				{
					this._Respond = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agree", DbType="Int")]
		public System.Nullable<int> Agree
		{
			get
			{
				return this._Agree;
			}
			set
			{
				if ((this._Agree != value))
				{
					this._Agree = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="Int")]
		public System.Nullable<int> Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this._Process = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Int")]
		public System.Nullable<int> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this._Due = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Quoted
		{
			get
			{
				return this._Quoted;
			}
			set
			{
				if ((this._Quoted != value))
				{
					this._Quoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Actual
		{
			get
			{
				return this._Actual;
			}
			set
			{
				if ((this._Actual != value))
				{
					this._Actual = value;
				}
			}
		}
	}
	
	public partial class proc_rpt_DashboardDetailResult
	{
		
		private string _AccountExecutiveID;
		
		private int _ClientID;
		
		private int _OpportunityID;
		
		private int _ActivityID;
		
		private string _ClientName;
		
		private string _Opportunity;
		
		private System.Nullable<System.DateTime> _OpportunityDue;
		
		private System.Nullable<System.DateTime> _NextDate;
		
		private System.Nullable<decimal> _NetBrokerage;
		
		private System.DateTime _Added;
		
		private string _ResultGroupBy;
		
		public proc_rpt_DashboardDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExecutiveID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountExecutiveID
		{
			get
			{
				return this._AccountExecutiveID;
			}
			set
			{
				if ((this._AccountExecutiveID != value))
				{
					this._AccountExecutiveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityID", DbType="Int NOT NULL")]
		public int OpportunityID
		{
			get
			{
				return this._OpportunityID;
			}
			set
			{
				if ((this._OpportunityID != value))
				{
					this._OpportunityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opportunity", DbType="VarChar(283)")]
		public string Opportunity
		{
			get
			{
				return this._Opportunity;
			}
			set
			{
				if ((this._Opportunity != value))
				{
					this._Opportunity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpportunityDue", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OpportunityDue
		{
			get
			{
				return this._OpportunityDue;
			}
			set
			{
				if ((this._OpportunityDue != value))
				{
					this._OpportunityDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NextDate
		{
			get
			{
				return this._NextDate;
			}
			set
			{
				if ((this._NextDate != value))
				{
					this._NextDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBrokerage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NetBrokerage
		{
			get
			{
				return this._NetBrokerage;
			}
			set
			{
				if ((this._NetBrokerage != value))
				{
					this._NetBrokerage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultGroupBy", DbType="VarChar(42) NOT NULL", CanBeNull=false)]
		public string ResultGroupBy
		{
			get
			{
				return this._ResultGroupBy;
			}
			set
			{
				if ((this._ResultGroupBy != value))
				{
					this._ResultGroupBy = value;
				}
			}
		}
	}
	
	public partial class proc_rpt_TallyboardResult
	{
		
		private string _TallyFor;
		
		private System.Nullable<int> _Activities;
		
		private System.Nullable<int> _Clients;
		
		private System.Nullable<int> _Opportunities;
		
		public proc_rpt_TallyboardResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TallyFor", DbType="NVarChar(309)")]
		public string TallyFor
		{
			get
			{
				return this._TallyFor;
			}
			set
			{
				if ((this._TallyFor != value))
				{
					this._TallyFor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="Int")]
		public System.Nullable<int> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clients", DbType="Int")]
		public System.Nullable<int> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				if ((this._Clients != value))
				{
					this._Clients = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opportunities", DbType="Int")]
		public System.Nullable<int> Opportunities
		{
			get
			{
				return this._Opportunities;
			}
			set
			{
				if ((this._Opportunities != value))
				{
					this._Opportunities = value;
				}
			}
		}
	}
	
	public partial class proc_rpt_DashboardResult
	{
		
		private string _Action;
		
		private System.Nullable<int> _PreviousStatusID;
		
		private System.Nullable<int> _FollowUps;
		
		private System.Nullable<decimal> _FollowUpsQuoted;
		
		private System.Nullable<decimal> _FollowUpsActual;
		
		private System.Nullable<int> _Activities;
		
		private System.Nullable<decimal> _ActivitiesQuoted;
		
		private System.Nullable<decimal> _ActivitiesActual;
		
		private System.Nullable<int> _PipelineOutcomes;
		
		private System.Nullable<decimal> _PipelineQuoted;
		
		private System.Nullable<decimal> _PipelineActual;
		
		private System.Nullable<int> _SuccessOutcomes;
		
		private System.Nullable<int> _CompleteOutcomes;
		
		private System.Nullable<decimal> _ToWinQuoted;
		
		private System.Nullable<decimal> _LostQuoted;
		
		private System.Nullable<decimal> _WonActual;
		
		private System.Nullable<int> _DueOutcomes;
		
		private System.Nullable<decimal> _DueQuoted;
		
		private System.Nullable<decimal> _DueActual;
		
		public proc_rpt_DashboardResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStatusID", DbType="Int")]
		public System.Nullable<int> PreviousStatusID
		{
			get
			{
				return this._PreviousStatusID;
			}
			set
			{
				if ((this._PreviousStatusID != value))
				{
					this._PreviousStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUps", DbType="Int")]
		public System.Nullable<int> FollowUps
		{
			get
			{
				return this._FollowUps;
			}
			set
			{
				if ((this._FollowUps != value))
				{
					this._FollowUps = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpsQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> FollowUpsQuoted
		{
			get
			{
				return this._FollowUpsQuoted;
			}
			set
			{
				if ((this._FollowUpsQuoted != value))
				{
					this._FollowUpsQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpsActual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> FollowUpsActual
		{
			get
			{
				return this._FollowUpsActual;
			}
			set
			{
				if ((this._FollowUpsActual != value))
				{
					this._FollowUpsActual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="Int")]
		public System.Nullable<int> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this._Activities = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ActivitiesQuoted
		{
			get
			{
				return this._ActivitiesQuoted;
			}
			set
			{
				if ((this._ActivitiesQuoted != value))
				{
					this._ActivitiesQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesActual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ActivitiesActual
		{
			get
			{
				return this._ActivitiesActual;
			}
			set
			{
				if ((this._ActivitiesActual != value))
				{
					this._ActivitiesActual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineOutcomes", DbType="Int")]
		public System.Nullable<int> PipelineOutcomes
		{
			get
			{
				return this._PipelineOutcomes;
			}
			set
			{
				if ((this._PipelineOutcomes != value))
				{
					this._PipelineOutcomes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PipelineQuoted
		{
			get
			{
				return this._PipelineQuoted;
			}
			set
			{
				if ((this._PipelineQuoted != value))
				{
					this._PipelineQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineActual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PipelineActual
		{
			get
			{
				return this._PipelineActual;
			}
			set
			{
				if ((this._PipelineActual != value))
				{
					this._PipelineActual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessOutcomes", DbType="Int")]
		public System.Nullable<int> SuccessOutcomes
		{
			get
			{
				return this._SuccessOutcomes;
			}
			set
			{
				if ((this._SuccessOutcomes != value))
				{
					this._SuccessOutcomes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteOutcomes", DbType="Int")]
		public System.Nullable<int> CompleteOutcomes
		{
			get
			{
				return this._CompleteOutcomes;
			}
			set
			{
				if ((this._CompleteOutcomes != value))
				{
					this._CompleteOutcomes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToWinQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> ToWinQuoted
		{
			get
			{
				return this._ToWinQuoted;
			}
			set
			{
				if ((this._ToWinQuoted != value))
				{
					this._ToWinQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LostQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> LostQuoted
		{
			get
			{
				return this._LostQuoted;
			}
			set
			{
				if ((this._LostQuoted != value))
				{
					this._LostQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WonActual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> WonActual
		{
			get
			{
				return this._WonActual;
			}
			set
			{
				if ((this._WonActual != value))
				{
					this._WonActual = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueOutcomes", DbType="Int")]
		public System.Nullable<int> DueOutcomes
		{
			get
			{
				return this._DueOutcomes;
			}
			set
			{
				if ((this._DueOutcomes != value))
				{
					this._DueOutcomes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueQuoted", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> DueQuoted
		{
			get
			{
				return this._DueQuoted;
			}
			set
			{
				if ((this._DueQuoted != value))
				{
					this._DueQuoted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueActual", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> DueActual
		{
			get
			{
				return this._DueActual;
			}
			set
			{
				if ((this._DueActual != value))
				{
					this._DueActual = value;
				}
			}
		}
	}
	
	public partial class sp_web_ListOpportunityActiveActivitiesResult
	{
		
		private int _ActivityID;
		
		private string _StatusDescription;
		
		private System.DateTime _Added;
		
		private string _ActivityNote;
		
		private string _Action;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _AddedBy;
		
		public sp_web_ListOpportunityActiveActivitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDescription", DbType="VarChar(30)")]
		public string StatusDescription
		{
			get
			{
				return this._StatusDescription;
			}
			set
			{
				if ((this._StatusDescription != value))
				{
					this._StatusDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this._Added = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ActivityNote
		{
			get
			{
				return this._ActivityNote;
			}
			set
			{
				if ((this._ActivityNote != value))
				{
					this._ActivityNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(30)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
